<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009 Inspire-Software.com
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/cache
	                       http://www.springframework.org/schema/cache/spring-cache.xsd">

    <cache:annotation-driven />

    <bean id="priceNavigation" class="org.yes.cart.search.query.impl.PriceNavigationImpl"/>

    <bean id="attributeLuceneQueryBuilder" class="org.yes.cart.search.query.impl.AttributeSearchQueryBuilder"/>
    <bean id="attributeSkuLuceneQueryBuilder" class="org.yes.cart.search.query.impl.AttributeSearchQueryBuilder"/>
    <bean id="featuredProductLuceneQueryBuilder" class="org.yes.cart.search.query.impl.FeaturedProductSearchQueryBuilder"/>
    <bean id="notSoldSeparatelyProductLuceneQueryBuilder" class="org.yes.cart.search.query.impl.NotSoldSeparatelyProductSearchQueryBuilder"/>
    <bean id="hasOfferProductSearchQueryBuilder" class="org.yes.cart.search.query.impl.HasOfferProductSearchQueryBuilder"/>
    <bean id="inStockProductSearchQueryBuilder" class="org.yes.cart.search.query.impl.InStockProductSearchQueryBuilder"/>
    <bean id="keywordProductLuceneQueryBuilder" class="org.yes.cart.search.query.impl.KeywordProductSearchQueryBuilder"/>
    <bean id="keywordProductSkuLuceneQueryBuilder" class="org.yes.cart.search.query.impl.KeywordProductSkuSearchQueryBuilder"/>
    <bean id="priceLuceneQueryBuilder" class="org.yes.cart.search.query.impl.PriceSearchQueryBuilder">
        <constructor-arg index="0" ref="priceNavigation"/>
    </bean>
    <bean id="productCategoryLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductCategorySearchQueryBuilder"/>
    <bean id="productCategoryIncludingParentsLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductCategoryIncludingParentsSearchQueryBuilder"/>
    <bean id="productShopLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductShopSearchQueryBuilder"/>
    <bean id="productShopInStockLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductShopInStockSearchQueryBuilder"/>
    <bean id="productShopHasPriceLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductShopHasPriceSearchQueryBuilder"/>
    <bean id="productIdLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductIdSearchQueryBuilder"/>
    <bean id="productSkuCodeLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductSkuCodeSearchQueryBuilder"/>
    <bean id="productCodeLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductCodeSearchQueryBuilder"/>
    <bean id="productSkuIdLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductSkuIdSearchQueryBuilder"/>
    <bean id="productTagLuceneQueryBuilder" class="org.yes.cart.search.query.impl.ProductTagSearchQueryBuilder">
        <constructor-arg index="0" ref="shopSearchSupportService"/>
    </bean>
    <bean id="noopLuceneQueryBuilder" class="org.yes.cart.search.query.impl.NoopProductSearchQueryBuilder"/>

    <bean id="ftQueryFactory" class="org.yes.cart.search.query.impl.SearchQueryFactoryImpl">
        <constructor-arg index="0" type="org.yes.cart.service.domain.AttributeService" ref="attributeService"/>
        <constructor-arg index="1" type="org.yes.cart.service.domain.ProductService" ref="productService"/>
        <constructor-arg index="2">
            <map>
                <!-- Direct sku from URL or in code -->
                <entry key="sku"            value-ref="productSkuIdLuceneQueryBuilder"/>
                <entry key="sku.skuId"      value-ref="productSkuIdLuceneQueryBuilder"/>
                <entry key="sku.code"       value-ref="productSkuCodeLuceneQueryBuilder"/>
                <!-- Direct product from URL or in code -->
                <entry key="product"        value-ref="productIdLuceneQueryBuilder"/>
                <entry key="productId"      value-ref="productIdLuceneQueryBuilder"/>
                <entry key="code"           value-ref="productCodeLuceneQueryBuilder"/>

                <!-- Searching from url -->
                <entry key="query"          value-ref="keywordProductLuceneQueryBuilder"/>
                <entry key="tag"            value-ref="productTagLuceneQueryBuilder"/>
                <entry key="price"          value-ref="priceLuceneQueryBuilder"/>
                <entry key="featured"       value-ref="featuredProductLuceneQueryBuilder"/>
                <entry key="instock"        value-ref="inStockProductSearchQueryBuilder"/>
                <entry key="hasoffer"       value-ref="hasOfferProductSearchQueryBuilder"/>

                <!-- Internal -->
                <entry key="attribute.attribute"                    value-ref="attributeLuceneQueryBuilder"/>
                <entry key="productCategory.category"               value-ref="productCategoryLuceneQueryBuilder"/>
                <entry key="productCategory.category.inc.parents"   value-ref="productCategoryIncludingParentsLuceneQueryBuilder"/>
                <entry key="productShopId"                          value-ref="productShopLuceneQueryBuilder"/>
                <entry key="productInStockShopId"                   value-ref="productShopInStockLuceneQueryBuilder"/>
                <entry key="productHasPriceShopId"                  value-ref="productShopHasPriceLuceneQueryBuilder"/>
                <entry key="notSoldSeparately"                      value-ref="notSoldSeparatelyProductLuceneQueryBuilder"/>
            </map>
        </constructor-arg>
        <constructor-arg index="3">
            <map>
                <!-- Direct sku from URL or in code -->
                <entry key="sku"            value-ref="noopLuceneQueryBuilder"/>
                <entry key="sku.skuId"      value-ref="noopLuceneQueryBuilder"/>
                <entry key="sku.code"       value-ref="productSkuCodeLuceneQueryBuilder"/>
                <!-- Direct product from URL or in code -->
                <entry key="product"        value-ref="productIdLuceneQueryBuilder"/>
                <entry key="productId"      value-ref="productIdLuceneQueryBuilder"/>
                <entry key="code"           value-ref="productCodeLuceneQueryBuilder"/>

                <!-- Searching from url -->
                <entry key="brand"          value-ref="noopLuceneQueryBuilder"/>
                <entry key="query"          value-ref="keywordProductSkuLuceneQueryBuilder"/>
                <entry key="tag"            value-ref="noopLuceneQueryBuilder"/>
                <entry key="price"          value-ref="priceLuceneQueryBuilder"/>
                <entry key="featured"       value-ref="noopLuceneQueryBuilder"/>
                <entry key="instock"        value-ref="noopLuceneQueryBuilder"/>
                <entry key="hasoffer"       value-ref="noopLuceneQueryBuilder"/>

                <!-- Internal -->
                <entry key="attribute.attribute"           value-ref="attributeSkuLuceneQueryBuilder"/>
                <entry key="productCategory.category"      value-ref="noopLuceneQueryBuilder"/>
                <entry key="productShopId"                 value-ref="noopLuceneQueryBuilder"/>
                <entry key="notSoldSeparately"             value-ref="notSoldSeparatelyProductLuceneQueryBuilder"/>
            </map>
        </constructor-arg>
    </bean>

    <!-- ################################ Register module  ####################################################### -->

    <bean class="org.yes.cart.env.impl.ModuleImpl">
        <property name="functionalArea" value="search"/>
        <property name="name" value="search-lucene-embeded"/>
        <property name="subName" value="core-index-sf"/>
    </bean>

</beans>